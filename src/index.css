/* rubik-regular - latin */
@font-face {
  font-family: 'Rubik';
  font-style: normal;
  font-weight: 400;
  font-display: swap;
  src: local(''),
       url('/fonts/rubik-v14-latin-regular.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url('/fonts/rubik-v14-latin-regular.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}

/* rubik-700 - latin */
@font-face {
  font-family: 'Rubik';
  font-style: normal;
  font-weight: 700;
  font-display: swap;
  src: local(''),
       url('/fonts/rubik-v14-latin-700.woff2') format('woff2'), /* Chrome 26+, Opera 23+, Firefox 39+ */
       url('/fonts/rubik-v14-latin-700.woff') format('woff'); /* Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+ */
}


:root {
  --primary: #55FBFF;
  --secondary: #012B48;
  --gray-light: #F6F6F6;
  --gray-mid: #C5CADC;
  --gray-dark: #959EBB;
  --bodyText: var(--secondary);
  --bgColor: var(--gray-light);
  --buttonColor: var(--secondary);
  --buttonText: var(--primary);
  --buttonHoverColor: var(--primary);
  --buttonHoverText: var(--secondary);
  --inputColor: transparent;
  --inputBorder: var(--gray-mid);
  --inputHoverBorder: var(--secondary);
  --inputHoverColor: #fff;
  --taskCard: transparent;
  --taskText: inherit;
  --taskCardBorder: transparent;
  --taskCardHover: #fff;
  --taskCardHoverBorder: transparent;
  --taskCardActive: var(--taskCardHover);
  --taskCardActiveBorder: var(--gray-mid);
  --taskCardActiveHoverBorder: var(--secondary);
  --settingsBG: #fff;
  --settingsBorder: transparent;
  --shadowColorA: rgba(0, 0, 0, 0.1);
  --shadowColorB: rgba(0, 0, 0, 0.06);
  --shadowLgColorB: rgba(0, 0, 0, 0.05);
  --shadowXlColorB: rgba(0, 0, 0, 0.04);
}

[data-theme="dark"] {
  --primary: #30EAEE;
  --secondary: #140E24;
  --bodyText: var(--gray-mid);
  --bgColor: var(--secondary);
  --buttonColor: var(--primary);
  --buttonText: var(--secondary);
  --buttonHoverColor: var(--secondary);
  --buttonHoverText: var(--primary);
  --inputBorder: var(--gray-dark);
  --inputHoverBorder: var(--primary);
  --inputHoverColor: transparent;
  --taskText: var(--gray-light);
  --taskCardBorder: #363636;
  --taskCardHover: transparent;
  --taskCardHoverBorder: var(--gray-dark);
  --taskCardActive: transparent;
  --taskCardActiveBorder: var(--gray-dark);
  --taskCardActiveHoverBorder: var(--primary);
  --settingsBG: var(--secondary);
  --settingsBorder: var(--gray-dark);
  --shadowColorA: rgba(240, 240, 240, 0.1);
  --shadowColorB: rgba(240, 240, 240, 0.06);
  --shadowLgColorB: rgba(240, 240, 240, 0.05);
  --shadowXlColorB: rgba(240, 240, 240, 0.04);
}

@tailwind base;

@tailwind components;

  * {
    -webkit-tap-highlight-color: rgba(0,0,0,0);
    -webkit-tap-highlight-color: transparent;
  }

  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }
  }

  body {
    @apply font-sans;
    background-color: var(--bgColor);
    color: var(--bodyText);
  }

  /* scrollbar styles */

  @media(min-width: 576px) {
    body::-webkit-scrollbar-track
    {
      box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
      -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
      background-color: var(--bgColor);
    }

    body::-webkit-scrollbar
    {
      width: 6px;
      background-color: var(--bgColor);
    }

    body::-webkit-scrollbar-thumb
    {
      background-color: var(--buttonColor);
      border-radius: 99999px;
    }
  }

  .grab {
    cursor: grab;
  }

  .grabbing * {
    cursor: grabbing;
  }

  footer a:hover {
    @apply underline;
  }

  /* BUTTONS -------------------------------------------------------------------------------- */
  .icon {
    @apply pointer-events-none;
  }

  button:disabled {
    @apply cursor-not-allowed;
  }

  .btn {
    @apply flex items-center justify-center rounded-lg uppercase font-bold;
  }

  .btn:focus {
    outline: none;
    @apply shadow-outline;
  }

  .btn-default {
    @apply border border-transparent px-8 py-2;
    background-color: var(--buttonColor);
    color: var(--buttonText);
    box-shadow: 0 1px 3px 0 var(--shadowColorA), 0 1px 2px 0 var(--shadowColorB);
  }

  .btn-scale:active {
    transform: scale(0.9);
  }

  .btn-muted {
    @apply flex-shrink-0 text-gray-mid rounded-full w-8 h-8;
  }

  /* BTN CONTROLS -------------------------------------------------------------------------------- */
  .btn-control {
    @apply absolute border border-transparent rounded-full w-8 h-8;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--buttonColor);
    color: var(--buttonText);
    box-shadow: 0 1px 3px 0 var(--shadowColorA), 0 1px 2px 0 var(--shadowColorB);
  }

  .control-active {
    @apply text-secondary bg-primary;
  }

  /* BTN SETTINGS -------------------------------------------------------------------------------- */
  .btn-settings {
    @apply flex items-center justify-center rounded-full text-gray-mid w-8 h-8 mx-auto;
  }

  @media(min-width: 768px) {
    .btn-settings {
      @apply absolute top-0 right-0 m-8;
    }
  }

  .btn-settings:focus {
    outline: none;
    @apply shadow-outline;
  }

  /* BTN THEME SWITCH -------------------------------------------------------------------------------- */
  .btn-theme-switch {
    @apply hidden;
  }

  @media(min-width: 1024px) {
    .btn-theme-switch {
      @apply fixed bottom-0 right-0 flex items-center justify-center rounded-full text-gray-mid w-8 h-8 m-8;
    }

    .btn-theme-switch:hover {
      @apply text-gray-dark;
    }

    .btn-theme-switch:focus {
      outline: none;
      @apply shadow-outline;
    }
  }

  /* BTN SAVE -------------------------------------------------------------------------------- */
  .inner-enter-active,
  .inner-leave-active {
    transition: all .5s ease;
  }

  .inner-enter-from,
  .inner-leave-to {
    opacity: 0;
    transform: translateX(-50px);
  }

  /* INPUT TEXT -------------------------------------------------------------------------------- */
  .input-task {
    @apply border-b-2 rounded-lg px-3 py-2;
    background-color: var(--inputColor);
    border-color: var(--inputBorder);
  }

  .input-task:focus {
    outline: none;
    @apply shadow-outline;
    background-color: var(--inputHoverColor);
    border-color: var(--inputHoverBorder);
  }

  /* TASKLIST -------------------------------------------------------------------------------- */
  .tasklist-header {
    @apply flex items-center justify-between flex-wrap;
  }

  .new-task {
    @apply flex flex-col;
  }

  @media(min-width: 768px) {
    .new-task {
      @apply flex-row items-center justify-between;
    }
  }

  .list-enter-active,
  .list-leave-active {
    opacity: 1;
    transition: all 0.5s ease;
  }

  /* .list-move {
    transition: transform 0.5s ease;
  } */

  .list-enter-from,
  .list-leave-to {
    opacity: 0;
    transform: translateY(30px);
  }

  /* TASK ITEMS -------------------------------------------------------------------------------- */
  .task-item {
    @apply flex flex-col rounded border;
    background-color: var(--taskCard);
    color: var(--taskText);
    border-color: var(--taskCardBorder);
    box-shadow: 0 1px 3px 0 var(--shadowColorA), 0 1px 2px 0 var(--shadowColorB);
  }

  @media(min-width: 768px) {
    .task-item {
      @apply flex-row items-center justify-between;
    }
  }

  .task-item:hover {
    background-color: var(--taskCardHover);
    border-color: var(--taskCardHoverBorder);
  }

  .active {
    background-color: var(--taskCardActive);
    border-color: var(--taskCardActiveBorder);
    box-shadow: 0 10px 15px -3px var(--shadowColorA), 0 4px 6px -2px var(--shadowLgColorB);
    transform: scale(1.05);
  }

  .task-item.active:hover {
    border-color: var(--taskCardActiveHoverBorder);
  }

  .separator {
    background-color: var(--taskCardActiveBorder);
  }

  .fade-enter-active,
  .fade-leave-active {
    max-height: 2rem;
    opacity: 1;
    transition: all .6s ease;
  }

  .fade-enter-from,
  .fade-leave-to {
    max-heigth: 0;
    opacity: 0;
  }

  .btn-edit-enter {
    @apply mr-2;
  }

  @media(min-width: 1024px) {
    .btn-edit-enter {
      @apply w-0 opacity-0 mr-0;
      transition: width .5s ease-in-out, opacity .25s ease, margin .5s ease-in-out;
    }
    .task-name:hover .btn-edit-enter,
    .btn-edit-enter:focus {
      @apply w-8 opacity-100 mr-2;
    }
  }

  /* SETTINGS MODAL -------------------------------------------------------------------------------- */

  .settings {
    @apply absolute top-0 right-0 max-w-md border rounded-lg m-8 z-50;
    background-color: var(--settingsBG);
    border-color: var(--settingsBorder);
    box-shadow: 0 10px 15px -3px var(--shadowColorA), 0 4px 6px -2px var(--shadowLgColorB);
    width: calc(100% - 4rem);
  }

  .modal-enter-active,
  .modal-leave-active {
    opacity: 1;
    transition: all 0.6s ease;
  }

  .modal-enter-from,
  .modal-leave-to {
    opacity: 0;
    transform: translateY(-30px);
  }

  .modal-inner-enter-active,
  .modal-inner-leave-active {
    height: auto;
    max-height: auto;
    opacity: 1;
    transition: height 0.75s ease;
  }

  .modal-inner-enter-from,
  .modal-inner-leave-to {
    height: 0;
    max-height: 0;
    opacity: 0;
  }

  /* ---------- HOVER STYLES ---------- */
  /* Styles that shouldn't trigger on touch devices where :hover doesn't work properly = doesn't unset itself */
  /* See: https://stackoverflow.com/questions/23885255/how-to-remove-ignore-hover-css-style-on-touch-devices */

  @media (hover: hover) and (pointer: fine) {
    *:hover {
      transition: all .35s ease;
    }

    .btn-default:hover {
      @apply shadow-none;
      background-color: var(--buttonHoverColor);
      color: var(--buttonHoverText);
      border-color: var(--buttonHoverText);
    }

    .btn-muted:hover {
      @apply text-secondary bg-gray-mid;
    }

    .btn-control:hover {
      background-color: var(--buttonHoverColor);
      color: var(--buttonHoverText);
      border-color: var(--buttonHoverText);
    }

    .control-active:hover {
      @apply text-primary bg-secondary;
    }

    .btn-settings:hover {
      @apply text-gray-dark;
    }

    .input-task:hover {
      background-color: var(--inputHoverColor);
      border-color: var(--inputHoverBorder);
    }
  }

@tailwind utilities;
